[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
line-length = 120
indent-width = 4
target-version = "py39"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [
  "E",  # pycodestyle errors
  "F",  # pyflakes
  "W",  # pycodestyle warnings
  "I",  # isort
  ]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"  # Like Black, use double quotes for strings.
indent-style = "space"  # Like Black, indent with spaces, rather than tabs.
skip-magic-trailing-comma = false  # Like Black, respect magic trailing commas.
line-ending = "auto"  # Like Black, automatically detect the appropriate line ending.

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["gesturemote"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[build-system]
requires = ["setuptools>=45.0", "setuptools_scm[toml]>=6.3", "wheel"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
# Option below requires `tests/optional.py`
optional-tests = [
  "no_blackd: run when `d` extra NOT installed",
  "no_jupyter: run when `jupyter` extra NOT installed",
]
markers = ["incompatible_with_mypyc: run when testing mypyc compiled black"]

[tool.coverage.run]
omit = ['**/__init__.py']

[tool.mypy]
[[tool.mypy.overrides]]
module = ['cv2', 'PIL', 'PIL.*', 'setuptools', 'torchvision', 'torchvision.*']
ignore_missing_imports = true
